#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define N 100
typedef int Tab[N];

void remplirTableau(int  *t, int n)
{
    int i;
    srand(time(NULL)); //initialise le random
    for(i=0;i<n;i++)
    {
        t[i]=rand()%n; //t[i] reçoit une valeur aléatoire modulo n
    }
}

void recopie(int *t, Tab t2, int n)
{
    int i;
    for(i=0; i<n; i++)
    {
        t2[i]=t[i];
    }
}

void affichage(int *t, int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        printf("%d\n",t[i]);
    }
}


void permute(int *t, int i,int j)
{
    int temp=t[i];
    t[i]=t[j];
    t[j]=temp;
}
void triSelection(int *t, int n)
{
    int i,j;
    for(i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(t[i]>t[j])
            {
            permute(t,i,j);
            }
        }
    }
}
int partionner(int *t, int debut, int fin)
{
    int p=t[debut];
    int i= debut;
    int j=fin +1 ;
    int fini = 0 ;
    while(!fini)
    {
        do
        {
            i++;
        }
        while(t[i]<p); //On partinionne les éléments <pivot

    do
    {
        j=j-1;
    }
    while(t[j]>=p); //On partionne les les éléments >= pivot
    if(i<j)
    {
        permute(t,i,j);
    }
    else
    {
        fini = 1 ;
    }
    }
    return j;

}
void triRapide(int * t, int debut, int fin)
{
    int p;
    if (debut<fin)
    {
        p=partionner(t,debut,fin);
        triRapide(t,debut,p-1);
        triRapide(t,p+1,fin);
    }
}
